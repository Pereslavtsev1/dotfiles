return {
  "MeanderingProgrammer/render-markdown.nvim",
  opts = {
    render_modes = { "n", "c", "i" },
    code = {
      enabled = true,
      render_modes = true,
      sign = true,
      style = "full",
      position = "left",
      language_pad = 0,
      language_icon = true,
      language_name = true,
      disable_background = { "diff" },
      width = "full",
      left_margin = 2,
      left_pad = 0,
      right_pad = 0,
      min_width = 0,
      border = "hide",
      above = "▄",
      below = "▀",
      inline_pad = 0,
      highlight = "RenderMarkdownCode",
      highlight_language = nil,
      highlight_border = "RenderMarkdownCodeBorder",
      highlight_fallback = "RenderMarkdownCodeFallback",
      highlight_inline = "RenderMarkdownCodeInline",
    },
    heading = {
      backgrounds = {},
      sign = false,
      border = true,
      below = "",
      above = "",
      left_pad = 0,
      position = "left",
      icons = {
        "█ ",
        "██ ",
        "███ ",
        "████ ",
        "█████ ",
        "██████ ",
      },
    },
    paragraph = {
      enabled = true,
      render_modes = false,
      left_margin = 2,
      min_width = 0,
    },
    bullet = {
      enabled = true,
      render_modes = false,
      icons = { "●", "○", "◆", "◇" },
      ordered_icons = function(ctx)
        local value = vim.trim(ctx.value)
        local index = tonumber(value:sub(1, #value - 1))
        return string.format("%d.", index > 1 and index or ctx.index)
      end,
      left_pad = 2,
      right_pad = 0,
      highlight = "RenderMarkdownBullet",
      scope_highlight = {},
    },
    checkbox = {
      enabled = true,
      render_modes = false,
      right_pad = 1,
      unchecked = {
        icon = "󰄱 ",
        highlight = "RenderMarkdownUnchecked",
        scope_highlight = nil,
      },
      checked = {
        icon = "󰱒 ",
        highlight = "RenderMarkdownChecked",
        scope_highlight = nil,
      },
      custom = {
        todo = { raw = "[-]", rendered = "󰥔 ", highlight = "RenderMarkdownTodo", scope_highlight = nil },
      },
    },
    quote = {
      enabled = true,
      render_modes = false,
      icon = "▋",
      repeat_linebreak = false,
      highlight = "RenderMarkdownQuote",
    },
    pipe_table = {
      enabled = true,
      render_modes = true,
      preset = "none",
      style = "full",
      cell = "padded",
      padding = 1,
      min_width = 0,
      border = {
        "┌",
        "┬",
        "┐",
        "├",
        "┼",
        "┤",
        "└",
        "┴",
        "┘",
        "│",
        "─",
      },
      alignment_indicator = "━",
      head = "RenderMarkdownTableHead",
      row = "RenderMarkdownTableRow",
      filler = "RenderMarkdownTableFill",
    },
  },
}
